{"version":3,"sources":["Assets/Icons/social.svg","Assets/Icons/news.svg","Assets/Icons/govt.svg","Assets/Icons/members.svg","Assets/Icons/post.svg","Assets/Icons/new.svg","Assets/Icons/arrow.svg","Contexts/global.js","Data/partyColors.js","Components/Vote/index.js","Data/menu.js","Components/Menu/index.js","Components/Article/index.js","Components/Search/index.js","Containers/Home/index.js","Containers/News/index.js","Containers/Parliament/index.js","Containers/Members/index.js","Containers/Postcode/index.js","Containers/NotFound/index.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Context","createContext","Provider","data","Conservative","Vote","props","console","log","className","Title","date","Date","toUTCString","AyeCount","Ayes","map","item","i","key","style","backgroundColor","PartyColors","PartyName","VoteCount","NoCount","Noes","label","route","icon","require","Menu","useState","window","location","pathname","path","setPath","MenuItems","onClick","navigate","src","Article","isExpanded","setIsExpanded","Search","value","onChange","onSubmit","placeholder","type","onKeyDown","e","keyCode","Home","state","useContext","votes","setVotes","useEffect","$","get","host","res","JSON","parse","vote","News","setData","searchTerm","setSearchTerm","selectedArticle","setSelectedArticle","getDate","articles","target","backgroundImage","urlToImage","title","description","source","name","publishedAt","content","Parliament","reverse","items","thumbnailUrl","nameDisplayAs","latestParty","postcode","setPostcode","replace","toUpperCase","NotFound","routes","Postcode","Members","MyApp","useRoutes","ProviderComponent","egState","setEgState","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8OAAAA,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,kCCA3CD,EAAOC,QAAU,IAA0B,iC,kCCA3CD,EAAOC,QAAU,IAA0B,mC,8ICCrCC,EAAUC,wBAAc,IACjBC,EAAWF,EAAQE,SACjBF,I,OCUAG,G,MAbF,CACZC,aAAc,SACd,mBAAoB,SACpB,OAAU,SACV,cAAe,SACf,cAAe,SACf,wBAAyB,SACzB,0BAA2B,SAC3B,mCAAoC,SACpC,SAAY,SACZ,4BAA6B,WC0CfC,EA9CF,SAACC,GAQb,OAPAC,QAAQC,IAAIF,GAQX,yBAAKG,UAAU,iBACd,uBAAGA,UAAU,SAASH,EAAMI,OAC5B,uBAAGD,UAAU,SAPEE,EAOcL,EAAMM,KAN5B,IAAIA,KAAKD,GACRE,gBAMR,yBAAKJ,UAAU,oBACd,uBAAGA,UAAU,SAAb,OAAyB,kCAAQH,EAAMQ,SAAd,MACzB,yBAAKL,UAAU,OACdH,EAAMS,MAAQT,EAAMS,KAAKC,KAAI,SAACC,EAAMC,GAEpC,OACC,yBAAKC,IAAKD,EAAET,UAAU,SAASW,MAAO,CAACC,gBAAgB,IAAKC,EAAYL,EAAKM,WAAa,OAC1F,uBAAGd,UAAU,aAAaQ,EAAKM,WAC/B,uBAAGd,UAAU,kBAAkBQ,EAAKO,iBAMvC,yBAAKf,UAAU,oBACd,uBAAGA,UAAU,SAAb,WAA6B,kCAAQH,EAAMmB,QAAd,MAC7B,yBAAKhB,UAAU,OACdH,EAAMoB,MAAQpB,EAAMoB,KAAKV,KAAI,SAACC,EAAMC,GACpC,OAEC,yBAAKC,IAAKD,EAAET,UAAU,SAASW,MAAO,CAACC,gBAAgB,IAAKC,EAAYL,EAAKM,WAAa,OAC1F,uBAAGd,UAAU,aAAaQ,EAAKM,WAC/B,uBAAGd,UAAU,kBAAkBQ,EAAKO,kBA9BzC,IAAiBb,GCuBHR,G,YAjCF,CACZ,CACCwB,MAAM,SACNC,MAAO,IACPC,KAAMC,EAAQ,KAEf,CACCH,MAAM,OACNC,MAAO,QACPC,KAAMC,EAAQ,KAEf,CACCH,MAAM,OACNC,MAAO,QACPC,KAAMC,EAAQ,KAEf,CACCH,MAAM,UACNC,MAAO,WACPC,KAAMC,EAAQ,KAEf,CACCH,MAAM,QACNC,MAAO,SACPC,KAAMC,EAAQ,OCIDC,EAxBF,WAAQ,IAAD,EACMC,mBAASC,OAAOC,SAASC,UAD/B,mBACZC,EADY,KACNC,EADM,KAEnB,OACC,yBAAK5B,UAAU,iBACb6B,GAAaA,EAAUtB,KAAI,SAACC,EAAMC,GAClC,OACC,yBACCC,IAAKD,EACLT,UAAS,4BAAuBQ,EAAKW,QAAUQ,GAAQ,cACvDG,QAAS,WACRF,EAAQpB,EAAKW,OACbY,mBAASvB,EAAKW,SAEf,yBAAKnB,UAAU,kBACf,yBAAKgC,IAAKxB,EAAKY,cCDNa,G,MAdC,WAAO,IAAD,EACgBV,oBAAS,GADzB,mBACbW,EADa,KACDC,EADC,KAErB,OAEC,yBAAKnC,UAAS,2BAAsBkC,GAAc,cAAgBJ,QAAS,kBAAMK,GAAeD,KAChG,yBAAKlC,UAAU,yBACb,yBAAKA,UAAS,yBACd,yBAAKgC,IAAKX,EAAQ,WCYPe,G,MAnBA,SAAC,GAA8C,IAA7CC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,YAO3C,OACC,yBAAKxC,UAAU,uBACf,yBAAKA,UAAU,kBACd,2BAAOyC,KAAK,OAAOJ,MAAOA,EAAOC,SAAUA,EAAUE,YAAaA,EAAaE,UARjF,SAAmBC,GACA,KAAdA,EAAEC,SACLL,OAOA,yBAAKvC,UAAU,SAAS8B,QAAS,kBAAMS,MACtC,yBAAKP,IAAKX,EAAQ,W,wBCyBPwB,EAnCF,SAAChD,GACb,IAAMiD,EAAQC,qBAAWxD,GADF,EAEKgC,oBAAS,GAFd,mBAEfyB,EAFe,KAERC,EAFQ,KAqBvB,OAjBAC,qBAAU,WAaT,OARApD,QAAQC,IAAI,iBACZoD,IAAEC,IAAF,UAASN,EAAMO,KAAf,eAAkC,SAACC,GAElCL,EAASM,KAAKC,MAAMF,OAKf,eAGL,IAED,yBAAKtD,UAAU,iBACd,kBAAC,EAAD,CAAQuC,SAAU,aAAgBD,SAAU,SAACK,KAAgBN,MAAO,GAAIG,YAAY,8BAEnFQ,GAASA,EAAMzC,KAAI,SAACkD,EAAMhD,GAC1B,OACC,kBAAC,EAAD,eAAMC,IAAKD,GAAOgD,SC8CRC,G,MAzEF,WACZ,IAAMZ,EAAQC,qBAAWxD,GADN,EAEMgC,oBAAS,GAFf,mBAEX7B,EAFW,KAELiE,EAFK,OAGkBpC,mBAAS,IAH3B,mBAGXqC,EAHW,KAGCC,EAHD,OAI2BtC,oBAAS,GAJpC,mBAIZuC,EAJY,KAIKC,EAJL,KAsBnB,SAASC,EAAQ9D,GAEhB,OADQ,IAAIC,KAAKD,GACRE,cAEV,OArBA8C,qBAAU,WAKT,OAJApD,QAAQC,IAAI,gBACZoD,IAAEC,IAAF,UAASN,EAAMO,KAAf,UAA6B,SAACC,GAC7BK,EAAQL,EAAIW,aAEN,eAGL,IAcF,yBAAKjE,UAAS,wBAAmB8D,GAAmB,eACnD,kBAAC,EAAD,CAAQvB,SAbV,WACCY,IAAEC,IAAF,UAASN,EAAMO,KAAf,mBAA8BO,IAAe,SAACN,GAC7CK,EAAQL,EAAIW,cAWsBzB,YAAY,iBAAiBF,SAAU,SAACK,GAAD,OAAOkB,EAAclB,EAAEuB,OAAO7B,QAAQA,MAAOuB,IACtH,yBAAK5D,UAAU,sBACdN,GAAQA,EAAKa,KAAI,SAACC,EAAMC,GACxB,OACC,yBAAKT,UAAU,cAAc8B,QAAS,WACrChC,QAAQC,IAAI,iBAAkBS,GAC9BuD,EAAmBvD,KAEnB,yBAAKR,UAAU,oBACf,yBAAKA,UAAU,uBACd,yBAAKA,UAAU,QAAQW,MAAO,CAACwD,gBAAgB,OAAD,OAAS3D,EAAK4D,WAAd,SAE/C,uBAAGpE,UAAU,SAASQ,EAAK6D,OAE3B,uBAAGrE,UAAU,eAAeQ,EAAK8D,aAEjC,uBAAGtE,UAAU,UAAUQ,EAAK+D,OAAOC,MACnC,uBAAGxE,UAAU,iBAAiBgE,EAAQxD,EAAKiE,oBAM9CX,GACA,yBAAK9D,UAAU,mBACd,yBAAKA,UAAU,cAAc8B,QAAS,kBAAMiC,GAAmB,KAC5D,yBAAK/D,UAAU,oBACf,yBAAKA,UAAU,uBACd,yBAAKA,UAAU,QAAQW,MAAO,CAACwD,gBAAgB,OAAD,OAASL,EAAgBM,WAAzB,SAE/C,uBAAGpE,UAAU,SAAS8D,EAAgBO,OAEtC,uBAAGrE,UAAU,eAAe8D,EAAgBQ,aAC5C,uBAAGtE,UAAU,eAAe8D,EAAgBY,SAC5C,uBAAG1E,UAAU,UAAU8D,EAAgBS,OAAOC,MAC9C,uBAAGxE,UAAU,iBAAiBgE,EAAQF,EAAgBW,oBClC9CE,EA7BI,SAAC9E,GACnB,IAAMiD,EAAQC,qBAAWxD,GADI,EAEDgC,oBAAS,GAFR,mBAErByB,EAFqB,KAEdC,EAFc,KAe7B,OAXAC,qBAAU,WAMT,OALAC,IAAEC,IAAF,UAASN,EAAMO,KAAf,eAAkC,SAACC,GAClCxD,QAAQC,IAAI,gBAAiBuD,GAC7BL,EAASK,EAAIsB,cAGR,eAGJ,IAGF,yBAAK5E,UAAU,uBACd,kBAAC,EAAD,CAAQuC,SAAU,aAAgBD,SAAU,SAACK,KAAgBN,MAAO,GAAIG,YAAY,8BAEnFQ,GAASA,EAAMzC,KAAI,SAACkD,EAAMhD,GAC1B,OACC,kBAAC,EAAD,eAAMC,IAAKD,GAAOgD,SCuBRC,G,MA5CF,WACZ,IAAMZ,EAAQC,qBAAWxD,GADN,EAEMgC,oBAAS,GAFf,mBAEX7B,EAFW,KAELiE,EAFK,OAGkBpC,mBAAS,IAH3B,mBAGXqC,EAHW,KAGCC,EAHD,KAwBnB,OApBAX,qBAAU,WAGT,OAAO,eAGL,IAeF,yBAAKlD,UAAS,qBACb,kBAAC,EAAD,CAAQuC,SAdV,WACCY,IAAEC,IAAF,UAASN,EAAMO,KAAf,wBAAmCO,IAAe,SAACN,GAClDxD,QAAQC,IAAI,cAAeuD,GAC3BK,EAAQL,EAAIuB,WAWsBrC,YAAY,qBAAqBF,SAAU,SAACK,GAAD,OAAOkB,EAAclB,EAAEuB,OAAO7B,QAAQA,MAAOuB,IAC1H,yBAAK5D,UAAU,yBACdN,GAAQA,EAAKa,KAAI,SAACC,EAAMC,GACxB,OACC,yBAAKT,UAAU,mBAEd,yBAAKA,UAAU,QAAQW,MAAO,CAACwD,gBAAgB,OAAD,OAAQ3D,EAAK6B,MAAMyC,aAAnB,QAC9C,2BAAItE,EAAK6B,MAAM0C,eACf,2BAAIvE,EAAK6B,MAAM2C,YAAYR,cCRlB3B,EA3BF,SAAChD,GACb,IAAMiD,EAAQC,qBAAWxD,GADF,EAEWgC,mBAAS,UAFpB,mBAEf0D,EAFe,KAELC,EAFK,KAgBvB,OACC,yBAAKlF,UAAU,iBACd,2BAAOqC,MAAO4C,EAAU3C,SAAU,SAACK,GAAD,OAAOuC,EAAwBvC,EAAEuB,OAAO7B,MAbjE8C,QAAQ,MAAO,IACdC,kBAaV,yBAAKtD,QAVP,WACCqB,IAAEC,IAAF,UAASN,EAAMO,KAAf,8BAAyC4B,IAAY,SAAC3B,GAErDxD,QAAQC,IAAIuD,QAOZ,YCbY+B,EARE,WAChB,OACC,yBAAKrF,UAAU,iBAAf,QCAIsF,G,MAAS,CACX,IAAK,kBAAM,kBAAC,EAAD,OACX,YAAa,kBAAM,kBAACC,EAAD,OACnB,WAAY,kBAAM,kBAACC,EAAD,OAClB,QAAS,kBAAM,kBAAC,EAAD,OACf,QAAS,kBAAM,kBAAC,EAAD,SAQJC,EALD,WAEV,OADoBC,oBAAUJ,IACR,kBAAC,EAAD,OCeXK,EAxBW,SAAA9F,GAAU,IAAD,EACH0B,qBADG,mBAC1BqE,EAD0B,KACjBC,EADiB,KAGjC,OACG,kBAACpG,EAAD,CACG4C,MAAO,CACLgB,KAAM,OACNuC,UACAC,eAKH,yBAAK7F,UAAU,uBACf,kBAAC,EAAD,MACA,yBAAKA,UAAU,mBACZ,kBAAC,EAAD,OAEH,kBAAC,EAAD,SCXa8F,QACW,cAA7BtE,OAAOC,SAASsE,UAEe,UAA7BvE,OAAOC,SAASsE,UAEhBvE,OAAOC,SAASsE,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.5b39a4af.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/social.4add1a52.svg\";","module.exports = __webpack_public_path__ + \"static/media/news.d31bc934.svg\";","module.exports = __webpack_public_path__ + \"static/media/govt.c702dc1e.svg\";","module.exports = __webpack_public_path__ + \"static/media/members.dece2b40.svg\";","module.exports = __webpack_public_path__ + \"static/media/post.13e1259d.svg\";","module.exports = __webpack_public_path__ + \"static/media/new.2caa1583.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow.6a1af9a1.svg\";","import { createContext } from 'react'\nconst Context = createContext({})\nexport const Provider = Context.Provider\nexport default Context","const data = {\n\tConservative: '0087dc',\n\t\"Liberal Democrat\": 'FDBB30',\n\t\"Labour\": 'd50000',\n\t'Plaid Cymru': '3F8428',\n\t\"Green Party\": '008066',\n\t\"UK Independence Party\": 'B3009D',\n\t'Scottish National Party': 'FFF95D',\n\t'Social Democratic & Labour Party': '2AA82C',\n\t'Alliance': 'F6CB2F',\n\t'Democratic Unionist Party': 'D46A4C'\n}\n\nexport default data\n","import React, { useContext, useEffect, useState } from 'react'\nimport './style.scss'\nimport PartyColors from 'Data/partyColors'\n\n\n\nconst Vote = (props) => {\n\tconsole.log(props)\n\n\n\tfunction getDate(date){\n\t\tlet d = new Date(date)\n\t\treturn d.toUTCString();\n\t}\n\treturn (\n\t\t<div className=\"VoteContainer\">\n\t\t\t<p className=\"title\">{props.Title}</p>\n\t\t\t<p className=\"date\">{getDate(props.Date)}</p>\n\t\t\t<div className=\"tellersContainer\">\n\t\t\t\t<p className=\"title\">For <span>({props.AyeCount})</span></p>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t{props.Ayes && props.Ayes.map((item, i) => {\n\t\t\t\t\t\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<div key={i}className=\"teller\" style={{backgroundColor:'#' +PartyColors[item.PartyName] + '44'}}>\n\t\t\t\t\t\t<p className=\"partyName\">{item.PartyName}</p>\n\t\t\t\t\t\t<p className=\"partyVoteCount\">{item.VoteCount}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"tellersContainer\">\n\t\t\t\t<p className=\"title\">Against <span>({props.NoCount})</span></p>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t{props.Noes && props.Noes.map((item, i) => {\n\t\t\t\t\treturn(\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div key={i}className=\"teller\" style={{backgroundColor:'#' +PartyColors[item.PartyName] + '44'}}>\n\t\t\t\t\t\t<p className=\"partyName\">{item.PartyName}</p>\n\t\t\t\t\t\t<p className=\"partyVoteCount\">{item.VoteCount}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n    \n}\n\nexport default Vote","const data = [\n\t{\n\t\tlabel:'Social',\n\t\troute: '/',\n\t\ticon: require(\"Assets/Icons/social.svg\")\n\t},\n\t{\n\t\tlabel:'News',\n\t\troute: '/news',\n\t\ticon: require(\"Assets/Icons/news.svg\")\n\t},\n\t{\n\t\tlabel:'Govt',\n\t\troute: '/govt',\n\t\ticon: require(\"Assets/Icons/govt.svg\")\n\t},\n\t{\n\t\tlabel:'Members',\n\t\troute: '/members',\n\t\ticon: require(\"Assets/Icons/members.svg\")\n\t},\n\t{\n\t\tlabel:'Posts',\n\t\troute: '/posts',\n\t\ticon: require(\"Assets/Icons/post.svg\")\n\t},\n\t// {\n\t// \tlabel:'New',\n\t// \troute: '/new',\n\t// \ticon: require(\"Assets/Icons/new.svg\")\n\t// },\n]\n\nexport default data","import React, { useState} from 'react'\nimport { navigate } from 'hookrouter'\nimport './style.scss'\nimport MenuItems from 'Data/menu'\nconst Menu = ( ) => {\n\tconst [path, setPath ] = useState(window.location.pathname)\n\treturn(\n\t\t<div className=\"MenuContainer\">\n\t\t\t{MenuItems && MenuItems.map((item, i) => {\n\t\t\t\treturn(\n\t\t\t\t\t<div \n\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\tclassName={`MenuItemContainer ${item.route === path && 'isSelected'}`} \n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetPath(item.route)\n\t\t\t\t\t\t\tnavigate(item.route)}\n\t\t\t\t\t\t}>\n\t\t\t\t\t\t<div className=\"imageContainer\">\n\t\t\t\t\t\t<img src={item.icon} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/*<p>{item.label}</p>*/}\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t})}\n\t\t</div>\n\t)\n}\n\nexport default Menu","import React, { useState} from 'react'\nimport './style.scss'\n\nconst Article = () => {\n\tconst [ isExpanded, setIsExpanded] = useState(false)\n\treturn(\n\n\t\t<div className={`ArticleContainer ${isExpanded && 'isExpanded'}`} onClick={() => setIsExpanded(!isExpanded)}>\t\n\t\t<div className=\"ArticleInnerContainer\">\n\t\t\t\t<div className={`newArticlePlaceholder`}>\n\t\t\t\t<img src={require('Assets/Icons/new.svg')}/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Article ","import React from 'react'\nimport './style.scss'\n\nconst Search = ({value, onChange, onSubmit, placeholder}) => {\n\n\tfunction onKeyDown(e){\n\t\tif (e.keyCode === 13){\n\t\t\tonSubmit()\n\t\t}\n\t}\n\treturn(\n\t\t<div className=\"inputOuterContainer\">\n\t\t<div className=\"inputContainer\">\n\t\t\t<input type=\"text\" value={value} onChange={onChange} placeholder={placeholder} onKeyDown={onKeyDown}/>\n\t\t\t<div className=\"submit\" onClick={() => onSubmit()}>\n\t\t\t\t<img src={require('Assets/Icons/arrow.svg')} />\n\t\t\t</div>\n\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Search","import React, { useContext, useEffect, useState } from 'react'\nimport { Vote, Search } from 'Components'\nimport Context from 'Contexts/global'\nimport $ from 'jquery'\n\nconst Home = (props) => {\n\tconst state = useContext(Context)\n\tconst [ votes, setVotes ] = useState(false)\n\n\tuseEffect(() => {\n\t\t// $.get(`${state.host}/votingrecord/?member=420` , (res) => {\n\t\t// \tconsole.log(res)\n\t\t// \tsetVotes(JSON.parse(res))\n\t\t// })\n\t\tconsole.log('getting votes')\n\t\t$.get(`${state.host}/divisions` , (res) => {\n\t\t\t// console.log(res)\n\t\t\tsetVotes(JSON.parse(res))\n\t\t})\n\t\t// $.get(`${state.host}/newssources` , (res) => {\n\t\t// \tconsole.log(res)\n\t\t// })\n\t\treturn() => {\n\n\t\t}\n\t},[])\n\treturn (\n\t\t<div className=\"homeContainer\">\n\t\t\t<Search onSubmit={() => {return}} onChange={(e) => {return}} value={''} placeholder=\"Search hashtag or keyword\"/>\n\n\t\t\t{votes && votes.map((vote, i) => {\n\t\t\t\treturn(\n\t\t\t\t\t<Vote key={i} {...vote} />\n\t\t\t\t)\n\t\t\t})}\n\t\t</div>\n\t)\n    \n}\n\nexport default Home","import React, { useEffect, useState, useContext} from 'react'\nimport './style.scss'\nimport Context from 'Contexts/global'\nimport { Search } from 'Components'\nimport $ from 'jquery'\nconst News = ( ) => {\n\tconst state = useContext(Context)\n\tconst [ data, setData] = useState(false)\n\tconst [ searchTerm, setSearchTerm] = useState('')\n\tconst [selectedArticle, setSelectedArticle] = useState(false)\n\tuseEffect(() => {\n\t\tconsole.log('getting news')\n\t\t$.get(`${state.host}/news` , (res) => {\n\t\t\tsetData(res.articles)\n\t\t})\n\t\treturn () => {\n\n\t\t}\n\t}, [])\n\n\tfunction onSubmitSearch(){\n\t\t$.get(`${state.host}/news?s=${searchTerm}` , (res) => {\n\t\t\tsetData(res.articles)\n\t\t})\n\t}\n\n\n\tfunction getDate(date){\n\t\tlet d = new Date(date)\n\t\treturn d.toUTCString();\n\t}\n\treturn(\n\t\t<div className={`newsContainer ${selectedArticle && 'isSelected'}`}>\n\t\t\t<Search onSubmit={onSubmitSearch} placeholder=\"Search keyword\" onChange={(e) => setSearchTerm(e.target.value)} value={searchTerm} />\n\t\t\t<div className=\"newsInnerContainer\">\n\t\t\t{data && data.map((item, i ) => {\n\t\t\t\treturn(\n\t\t\t\t\t<div className=\"newsArticle\" onClick={() => {\n\t\t\t\t\t\tconsole.log('selecting item', item)\n\t\t\t\t\t\tsetSelectedArticle(item)}\n\t\t\t\t\t}>\n\t\t\t\t\t\t<div className=\"newsArticleInner\">\n\t\t\t\t\t\t<div className=\"imageOuterContainer\">\n\t\t\t\t\t\t\t<div className=\"image\" style={{backgroundImage: `url(${item.urlToImage})`}} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<p className=\"title\">{item.title}</p>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<p className=\"description\">{item.description}</p>\n\n\t\t\t\t\t\t<p className=\"source\">{item.source.name}</p>\n\t\t\t\t\t\t<p className=\"publishedDate\">{getDate(item.publishedAt)}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t})}\n\t\t</div>\n\t\t{selectedArticle && \n\t\t\t<div className=\"selectedArticle\">\n\t\t\t\t<div className=\"newsArticle\" onClick={() => setSelectedArticle(false)}>\n\t\t\t\t\t\t\t<div className=\"newsArticleInner\">\n\t\t\t\t\t\t\t<div className=\"imageOuterContainer\">\n\t\t\t\t\t\t\t\t<div className=\"image\" style={{backgroundImage: `url(${selectedArticle.urlToImage})`}} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<p className=\"title\">{selectedArticle.title}</p>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<p className=\"description\">{selectedArticle.description}</p>\n\t\t\t\t\t\t\t<p className=\"description\">{selectedArticle.content}</p>\n\t\t\t\t\t\t\t<p className=\"source\">{selectedArticle.source.name}</p>\n\t\t\t\t\t\t\t<p className=\"publishedDate\">{getDate(selectedArticle.publishedAt)}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t}\n\t\t</div>\n\t)\n}\n\nexport default News","import React, { useContext, useEffect, useState } from 'react'\nimport { Vote, Search } from 'Components'\nimport Context from 'Contexts/global'\nimport $ from 'jquery'\n\nconst Parliament = (props) => {\n\tconst state = useContext(Context)\n\tconst [ votes, setVotes ] = useState(false)\n\n\tuseEffect(() => {\n\t\t$.get(`${state.host}/divisions` , (res) => {\n\t\t\tconsole.log('got divisions', res)\n\t\t\tsetVotes(res.reverse())\n\t\t})\n\t\t\n\t\treturn() => {\n\n\t\t}\n\t}, [])\n\n\treturn (\n\t\t<div className=\"ParliamentContainer\">\n\t\t\t<Search onSubmit={() => {return}} onChange={(e) => {return}} value={''} placeholder=\"Search hashtag or keyword\"/>\n\n\t\t\t{votes && votes.map((vote, i) => {\n\t\t\t\treturn(\n\t\t\t\t\t<Vote key={i} {...vote} />\n\t\t\t\t)\n\t\t\t})}\n\t\t</div>\n\t)\n    \n}\n\nexport default Parliament","import React, { useEffect, useState, useContext} from 'react'\nimport './style.scss'\nimport Context from 'Contexts/global'\nimport { Search } from 'Components'\nimport $ from 'jquery'\nconst News = ( ) => {\n\tconst state = useContext(Context)\n\tconst [ data, setData] = useState(false)\n\tconst [ searchTerm, setSearchTerm] = useState('')\n\tuseEffect(() => {\n\t\t\n\t\t\n\t\treturn () => {\n\n\t\t}\n\t}, [])\n\n\tfunction onSubmitSearch(){\n\t\t$.get(`${state.host}/member?name=${searchTerm}` , (res) => {\n\t\t\tconsole.log('got members', res)\n\t\t\tsetData(res.items)\n\t\t})\n\t}\n\n\n\tfunction getDate(date){\n\t\tlet d = new Date(date)\n\t\treturn d.toUTCString();\n\t}\n\treturn(\n\t\t<div className={`membersContainer `}>\n\t\t\t<Search onSubmit={onSubmitSearch} placeholder=\"Search member name\" onChange={(e) => setSearchTerm(e.target.value)} value={searchTerm} />\n\t\t\t<div className=\"membersInnerContainer\">\n\t\t\t{data && data.map((item, i ) => {\n\t\t\t\treturn(\n\t\t\t\t\t<div className=\"memberContainer\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div className=\"image\" style={{backgroundImage:`url(${item.value.thumbnailUrl})`}} />\n\t\t\t\t\t\t<p>{item.value.nameDisplayAs}</p>\n\t\t\t\t\t\t<p>{item.value.latestParty.name}</p>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t})}\n\t\t</div>\n\t\t\n\t\t</div>\n\t)\n}\n\nexport default News","import React, { useContext, useEffect, useState } from 'react'\nimport Context from 'Contexts/global'\nimport $ from 'jquery'\n\nconst Home = (props) => {\n\tconst state = useContext(Context)\n\tconst [ postcode, setPostcode ] = useState('e149xb')\n\n\tfunction standardise(str){\n\t\tstr = str.replace(/\\s/g, '');\n\t\treturn str.toUpperCase()\n\t}\n\n\tfunction onSubmit(){\n\t\t$.get(`${state.host}/postcode?postcode=${postcode}`, (res) => {\n\t\t\t\n\t\t\tconsole.log(res)\n\t\t})\n\t}\n\n\treturn (\n\t\t<div className=\"homeContainer\">\n\t\t\t<input value={postcode} onChange={(e) => setPostcode(standardise(e.target.value))} />\n\t\t\t<div onClick={onSubmit}>\n\t\t\tSubmit\n\t\t\t</div>\n\t\t</div>\n\t)\n    \n}\n\nexport default Home","import React from 'react'\n\nconst NotFound = () => {\n\treturn (\n\t\t<div className=\"homeContainer\">\n\t\t\t404\n\t\t</div>\n\t)   \n}\n\nexport default NotFound","import React from 'react'\nimport {useRoutes} from 'hookrouter';\nimport { Home, Postcode, NotFound, News, Parliament, Members } from 'Containers'\nimport './App.scss'\nconst routes = {\n    '/': () => <Home />,\n    '/postcode': () => <Postcode />,\n    '/members': () => <Members />,\n    '/govt': () => <Parliament />,\n    '/news': () => <News />\n};\n  \nconst MyApp = () => {\n    const routeResult = useRoutes(routes);\n    return routeResult || <NotFound />;\n}\n\nexport default MyApp","import React, { useState } from \"react\";\nimport { Provider } from \"./Contexts/global\";\nimport initialState from './initialState'\nimport Routes from './routes'\nimport { GridView, Menu, Article} from './Components'\nconst ProviderComponent = props => {  \n  const [egState, setEgState] = useState();\n\n  return (\n     <Provider\n        value={{\n          host: '/api',\n          egState,\n          setEgState\n        }}\n      >\n      \n       {/*<GridView />*/}\n       <div className=\"appContentContainer\">\n       <Menu />\n       <div className=\"routesContainer\">\n          <Routes />\n        </div>\n       <Article />\n       </div>\n    </Provider>\n  );\n};\n\nexport default ProviderComponent;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}